{"version":3,"sources":["services/base-http.services.js","components/MoviePreview/MoviePreview.module.css","components/MoviePreview/MoviePreview.js","components/Button/Button.styles.js","components/Button/Button.js","views/MovieDetails/MovieDetailsView.js"],"names":["KEY","fetchPost","url","axios","get","then","res","data","fetchMovie","id","fetchCast","fetchReviews","fetchQuery","query","module","exports","MoviePreview","name","original_title","title","release_date","vote_average","overview","poster_path","genres","className","style","card","cardImage","src","alt","parseInt","parseFloat","map","genre","Btn","styled","button","Button","props","caption","onClick","type","defaultProps","handleClick","MovieDetailsView","state","handleGoBack","location","history","goBack","push","movieId","this","match","params","movie","setState","to","path","exact","component","lazy","Component"],"mappings":"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","file":"static/js/5.5ed90cc5.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst KEY = '6a7678c71795cb2e35589b03882658b0'\r\n\r\nexport function fetchPost () {\r\n    const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\r\n    return axios.get(url).then(res => {\r\n        return res.data;\r\n    })\r\n}\r\n\r\nexport function fetchMovie(id) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\r\n    return axios.get(url).then(res => {\r\n        return res.data\r\n    })\r\n}\r\n\r\nexport function fetchCast(id) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\r\n    return axios.get(url).then(res => {\r\n        return res.data;\r\n    })\r\n}\r\n\r\nexport function fetchReviews(id) {\r\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\r\n    return axios.get(url).then(res => {\r\n        return res.data;\r\n    })\r\n}\r\n\r\nexport function fetchQuery(query) {\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    return axios.get(url).then(res => {\r\n        return res.data;\r\n    })\r\n}\r\n// KEYv4 = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YTc2NzhjNzE3OTVjYjJlMzU1ODliMDM4ODI2NThiMCIsInN1YiI6IjVmYzc5MzA0MjFjNGNhMDAzZjIwZTdiNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5tLvT6w8Dmw1RgSGaWNAc_XpKILMCJjsNewdc5RZOMU'\r\n\r\n// KEYv3 = '6a7678c71795cb2e35589b03882658b0'","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MoviePreview_card__1b953\",\"cardImage\":\"MoviePreview_cardImage__3DimL\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport style from './MoviePreview.module.css'\r\n\r\nconst MoviePreview = ({name, original_title, title, release_date, vote_average, overview, poster_path, genres}) => {\r\n    \r\n\r\n    return (\r\n        <div className={style.card}>\r\n            <div className={style.cardImage}><img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title}></img></div>\r\n        <div >\r\n                <h1>{title || name || original_title} ({parseInt(release_date)})</h1>\r\n                <p>User source {parseFloat(vote_average) * 10}%</p>\r\n                <h2>Overview</h2>\r\n                <p>{overview}</p>\r\n                <h2>Genras</h2>\r\n                <ul>\r\n                    {genres.map(genre=>{\r\n                       return <li key={genre.id}>{genre.name}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MoviePreview; \r\n\r\nMoviePreview.propTypes = {\r\n    title: PropTypes.string,\r\n    name: PropTypes.string,\r\n    original_title: PropTypes.string,\r\n  release_date: PropTypes.string.isRequired,\r\n  vote_average: PropTypes.number.isRequired,\r\n  overview: PropTypes.string.isRequired, \r\n  genres: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  poster_path: PropTypes.string.isRequired,\r\n};\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    min-width: 100px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    &:hover, &:focus {\r\n        background-color: #303f9f;\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Btn } from './Button.styles';\r\n\r\nconst Button = (props) => {\r\n  const { caption, onClick } = props\r\n  return (\r\n  <Btn type=\"button\"  onClick={onClick}> \r\n    {caption}\r\n  </Btn>\r\n)};\r\n\r\nButton.propTypes = {\r\n  caption: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  caption: '',\r\n  handleClick: () => {}\r\n};\r\n\r\nexport default Button;","import React, { Component, lazy } from 'react'\r\nimport { fetchMovie } from '../../services/base-http.services.js'\r\nimport { Link, Route, Switch } from 'react-router-dom'\r\nimport MoviePreview from '../../components/MoviePreview/MoviePreview.js'\r\nimport Button from '../../components/Button/Button.js'\r\n\r\n\r\n\r\nexport default class MovieDetailsView extends Component {\r\n    state = {\r\n        id: '',\r\n        genres: [],\r\n        release_date: '',\r\n        overview: '',\r\n        vote_average: 0,\r\n        poster_path: '',\r\n        title: '',\r\n        original_title: '',\r\n        name: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {movieId} = this.props.match.params\r\n    \r\n        fetchMovie(movieId)\r\n            .then(movie => {\r\n            this.setState({...movie})\r\n        })\r\n    }\r\n\r\n   handleGoBack = () => {\r\n  const {location, history} = this.props;\r\n\r\n  if (!location.state){\r\n    history.push('/');\r\n    return;\r\n  }\r\n  history.goBack();\r\n}\r\n\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        const { id,name, original_title, title, release_date, vote_average, overview, poster_path, genres } = this.state\r\n        const {match} = this.props\r\n\r\n        return (\r\n            <>\r\n                  <Button onClick={this.handleGoBack} caption=\"Go back\" />\r\n               \r\n                <MoviePreview name={name} original_title={original_title} title={title} release_date={release_date} vote_average={vote_average} overview={overview} poster_path={poster_path} genres={genres}/>\r\n                <p>Additional information</p>\r\n                <ul key={id}>\r\n                    <li ><Link to={`${match.url}/cast`} >Cast</Link></li> \r\n                     <li ><Link to={`${match.url}/reviews`} >Reviews</Link></li>  \r\n                </ul>\r\n                <Switch>\r\n              <Route path={`${match.path}/cast`} exact component={lazy(() => import(\"../../components/Cast/Cast\"))}/>\r\n              <Route path={`${match.path}/reviews`} exact component={lazy(() => import(\"../../components/Reviews/Reviews\"))}/>\r\n            </Switch>\r\n\r\n            </>\r\n        )\r\n    }\r\n}"],"sourceRoot":""}