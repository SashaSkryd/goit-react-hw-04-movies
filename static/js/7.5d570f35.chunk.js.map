{"version":3,"sources":["components/Cast/Cast.js"],"names":["Cast","state","cast","movieId","this","props","match","params","fetchCast","then","actor","setState","map","src","profile_path","alt","name","character","id","Component"],"mappings":"kPAGqBA,E,4MACjBC,MAAQ,CACJC,KAAK,I,kEAEY,IAAD,OACTC,EAAWC,KAAKC,MAAMC,MAAMC,OAA5BJ,QAEPK,YAAUL,GACLM,MAAK,SAAAC,GACN,EAAKC,SAAS,CAACT,KAAMQ,EAAMR,Y,+BAGzB,IAECA,EAAQE,KAAKH,MAAbC,KACP,OACI,mCACI,6BACKA,EAAKU,KAAI,SAAAF,GACT,OAAO,+BACA,qBAAKG,IAAG,yCAAoCH,EAAMI,cAAiBC,IAAI,eACvE,4BAAIL,EAAMM,OACV,4BAAIN,EAAMO,cAHDP,EAAMQ,e,GAnBTC","file":"static/js/7.5d570f35.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {fetchCast} from '../../services/base-http.services.js'\r\n\r\nexport default class Cast extends Component{\r\n    state = {\r\n        cast:[],\r\n    }\r\n    componentDidMount() {\r\n        const {movieId} = this.props.match.params\r\n    \r\n        fetchCast(movieId)\r\n            .then(actor => {\r\n            this.setState({cast: actor.cast})\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {cast} = this.state\r\n        return (\r\n            <>\r\n                <ul>\r\n                    {cast.map(actor => {\r\n                     return <li key={actor.id}>\r\n                            <img src={`https://image.tmdb.org/t/p/w300${actor.profile_path}` } alt='this actor' />\r\n                            <p>{actor.name}</p>\r\n                            <p>{actor.character}</p>\r\n                    </li>\r\n                    }\r\n                )}\r\n                </ul>\r\n                </>\r\n        )\r\n    }    \r\n\r\n}"],"sourceRoot":""}