{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","state","content","movieId","this","props","match","params","fetchReviews","then","data","setState","results","length","map","dir","author","id","Component"],"mappings":"kPAGqBA,E,4MACnBC,MAAQ,CACNC,QAAS,I,kEAEU,IAAD,OACVC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QAERK,YAAaL,GAASM,MAAK,SAACC,GAC1B,EAAKC,SAAS,CAAET,QAASQ,EAAKE,e,+BAMhC,OACE,mCACE,6BACGR,KAAKH,MAAMC,QAAQW,OAAS,EAC3BT,KAAKH,MAAMC,QAAQY,KAAI,SAACC,GACtB,OACE,+BACE,0CAAaA,EAAIC,UACjB,4BAAID,EAAIb,YAFDa,EAAIE,OAOjB,iF,GA3ByBC","file":"static/js/8.fc252424.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { fetchReviews } from \"../../services/base-http.services\"\r\n\r\nexport default class Reviews extends Component {\r\n  state = {\r\n    content: [],\r\n  }\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params\r\n\r\n    fetchReviews(movieId).then((data) => {\r\n      this.setState({ content: data.results })\r\n    })\r\n  }\r\n  render() {\r\n    // console.log(this.state.content)\r\n\r\n    return (\r\n      <>\r\n        <ul>\r\n          {this.state.content.length > 0 ? (\r\n            this.state.content.map((dir) => {\r\n              return (\r\n                <li key={dir.id}>\r\n                  <h2>Author: {dir.author}</h2>\r\n                  <p>{dir.content}</p>\r\n                </li>\r\n              )\r\n            })\r\n          ) : (\r\n            <p>We don't have any reviews for this movie</p>\r\n          )}\r\n        </ul>\r\n      </>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}